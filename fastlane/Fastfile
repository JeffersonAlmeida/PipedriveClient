# More documentation about how to customize your build
# can be found here:
# https://docs.fastlane.tools
fastlane_version "1.109.0"

# This value helps us track success metrics for Fastfiles
# we automatically generate. Feel free to remove this line
# once you get things running smoothly!
generated_fastfile_id "f5ec8833-fcf4-4e0c-ba4c-b1514bec6d88"

default_platform :android

# Generate a text with the last commits
# Check it out to change log pattern
# http://git-scm.com/docs/pretty-formats
def changelog_from_commits
    return changelog_from_git_commits(
        commits_count: ENV["COMMIT_COUNT_RELEAE_NOTES"],
        pretty: 'â€¢ The author of %h was %an, %ar%nThe title was >>%s<<%n%n',
        merge_commit_filtering: 'exclude_merges'
     )
end

# Generate release notes using a time header and last commits
def beta_release_notes
  change_log_header = "Build generated at " + Time.new.strftime("%H:%M:%S - %d/%m/%Y") + "\n\n"
  return change_log_header + changelog_from_commits
end

lane :master_beta do
  hmg_beta
  release_beta
end

lane :rc_beta do
  homolog_rc_beta
  production_rc_beta
end

lane :production_rc_beta do
  # lint_for_production
  generate_production_rc_apk
  send_apk_to_beta(apk_path: ENV["RELEASE_APK_PATH"])
end

lane :homolog_rc_beta do
  # lint_for_homolog
  generate_homologation_rc_apk
  send_apk_to_beta(apk_path: ENV["HMG_APK_PATH"])
end

lane :dev_beta do
  homolog_dev_beta
  production_dev_beta
end

lane :homolog_dev_beta do
  # lint_for_homolog
  generate_homologation_develop_apk
  send_apk_to_beta(apk_path: ENV["HMG_APK_PATH"])
end

lane :production_dev_beta do
  # lint_for_production
  generate_production_develop_apk
  send_apk_to_beta(apk_path: ENV["RELEASE_APK_PATH"])
end

# Send Homologation apk to Beta by Crashlytics
lane :hmg_beta do
  #lint_for_homolog
  generate_homolog_apk
  send_apk_to_beta(apk_path: ENV["HMG_APK_PATH"])
end

# Send Release apk to Beta by Crashlytics
lane :release_beta do
  #lint_for_production
  generate_production_apk
  send_apk_to_beta(apk_path: ENV["RELEASE_APK_PATH"])
end

# Clean and Build Homologation APK
lane :generate_homolog_apk do
  clean
  gradle(task: "assembleHomologation")
end

# Clean and Build Release APK
lane :generate_production_apk do
  clean
  gradle(task: "assembleProduction")
end

lane :generate_production_rc_apk do
  clean
  gradle(task: "assembleProduction -PappVersionNameSuffix=\"-rc\"")
end

lane :generate_production_develop_apk do
  clean
  gradle(task: "assembleProduction -PappVersionNameSuffix=\"-dev\"")
end

lane :generate_homologation_rc_apk do
  clean
  gradle(task: "assembleHomologation -PappVersionNameSuffix=\"-rc\"")
end

lane :generate_homologation_develop_apk do
  clean
  gradle(task: "assembleHomologation -PappVersionNameSuffix=\"-dev\"")
end

# Run clean task
lane :clean do
  gradle(task: "clean")
end

# Upload apk to Beta by Crashlytics
lane :send_apk_to_beta do |options|
  crashlytics(
      apk_path: options[:apk_path],
      api_token: ENV["CRASHLYTICS_API_TOKEN"],
      build_secret: ENV["CRASHLYTICS_BUILD_SECRET"],
      notes: beta_release_notes,
      emails: "jefferson.almeida.comp@gmail.com",
      notifications: true
  )
end

lane :lint_for_production do
  gradle(task: "lintRelease")
end

lane :lint_for_homolog do
  gradle(task: "lintHomologation")
end
